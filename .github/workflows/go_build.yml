name: build

permissions: {} # no need any permissions

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_call:
    inputs:
      skipTests: 
        description: 'Skip tests, useful when there is a dedicated CI job for tests'
        default: true
        required: true
        type: boolean

jobs:
  run:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        go: ['stable', 'oldstable']

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Go Format
        run: cd app && gofmt -s -w . && git diff --exit-code

      - name: Go Vet
        run: cd app && go vet ./...

      - name: Go Tidy
        run: cd app && go mod tidy && git diff --exit-code

      - name: Go Mod
        run: cd app && go mod download

      - name: Go Mod Verify
        run: cd app && go mod verify

      - name: Go Generate
        run: cd app && go generate ./... && git diff --exit-code

      - name: Go Build
        run: cd app && go build -o /dev/null ./...

   #   - name: Go Compile Tests
   #     if: ${{ inputs.skipTests }}
   #     run: go test -exec /bin/true ./...

   #   - name: Go Test
  #     if: ${{ !inputs.skipTests }}
   #     run: go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt ./...

    #  - name: Go Benchmark
     #   if: ${{ !inputs.skipTests }}
      #  run: go test -v -shuffle=on -run=- -bench=. -benchtime=1x ./...
