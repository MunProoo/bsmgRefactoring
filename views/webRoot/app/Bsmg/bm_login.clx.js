/*
 * App URI: app/Bsmg/bm_login
 * Source Location: app/Bsmg/bm_login.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/Bsmg/bm_login", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * bm_login.js
			 * Created at 2022. 5. 10. 오전 9:12:18.
			 *
			 * @author SW2Team
			 ************************************************/
			
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				// 여기선 초기 세팅이 필요하지 않을듯? Nope. 로그인체크를 해야함
				app.lookup("sms_chkLogin").send();
			}
			
			
			
			/*
			 * "Login" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				if(app.lookup("mem_id").value.length < 1) {
					alert("ID를 입력하세요.");
					app.lookup("mem_id").focus();
					return;
				}
				else if(app.lookup("mem_pw").value.length < 1) {
					alert("비밀번호를 입력하세요.");
					app.lookup("mem_pw").focus();
					return;
				}
				else{
					app.lookup("sms_login").send();
				}
				
				
			}
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_loginSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_login = e.control;
				var result = app.lookup("Result").getString("ResultCode");
			
				var dmMember = app.lookup("dm_memberInfo");
				if(result == null || result == ""){
					alert("서버 오류")
					return;
				}
				else if(result == 0){
					var mem_name = app.lookup("dm_memberInfo").getString("mem_name");
					alert(mem_name + "님 반갑습니다.");
					
					cpr.core.App.load("app/Bsmg/bm_Main", function(newapp){
						var applicationInfo = app.lookup("dm_memberInfo").getDatas();
						app.close();
						var newInst = newapp.createNewInstance();
						newInst.run().callAppMethod("setMemberInfo", applicationInfo);
					});
				}
				else{
					alert("아이디 혹은 비밀번호가 잘못되었습니다.");
					app.lookup("mem_id").value = "";
					app.lookup("mem_pw").value = "";
					app.lookup("mem_id").focus();
					return;
				}
				
			}
			
			
			
			
			/*
			 * 인풋 박스에서 keyup 이벤트 발생 시 호출.
			 * 사용자가 키에서 손을 뗄 때 발생하는 이벤트.
			 */
			function onMem_pwKeyup(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var mem_pw = e.control;
				// 엔터키로 클릭
				if(e.keyCode == "13") app.lookup("login").click();
			}
			
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_chkLoginSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_chkLogin = e.control;
				var result = app.lookup("Result").getString("ResultCode");
				
				if (result == 0){
					cpr.core.App.load("app/Bsmg/bm_Main", function(newapp){
						var applicationInfo = app.lookup("dm_memberInfo").getDatas();
						app.close();
						var newInst = newapp.createNewInstance();
						newInst.run().callAppMethod("setMemberInfo", applicationInfo);
					});
				} else {
					console.log("로그인 안됨");
				}
			};
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dm_memberInfo");
			dataMap_1.parseData({
				"columns" : [
					{"name": "mem_id"},
					{"name": "mem_pw"},
					{"name": "mem_name"},
					{"name": "mem_rank"},
					{"name": "mem_part"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("Result");
			dataMap_2.parseData({
				"columns" : [{"name": "ResultCode"}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("sms_login");
			submission_1.action = "/bsmg/login/login";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataMap_1, false);
			if(typeof onSms_loginSubmitDone == "function") {
				submission_1.addEventListener("submit-done", onSms_loginSubmitDone);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms_chkLogin");
			submission_2.method = "get";
			submission_2.action = "/bsmg/login/chkLogin";
			submission_2.addResponseData(dataMap_2, false);
			submission_2.addResponseData(dataMap_1, false);
			if(typeof onSms_chkLoginSubmitDone == "function") {
				submission_2.addEventListener("submit-done", onSms_chkLoginSubmitDone);
			}
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container();
				group_2.style.css({
					"background-color" : "#0a552c"
				});
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var inputBox_1 = new cpr.controls.InputBox("mem_id");
					inputBox_1.placeholder = "ID";
					inputBox_1.style.css({
						"border-radius" : "15px",
						"padding-left" : "10px",
						"text-align" : "left"
					});
					inputBox_1.bind("value").toDataMap(app.lookup("dm_memberInfo"), "mem_id");
					container.addChild(inputBox_1, {
						"top": "150px",
						"left": "93px",
						"width": "472px",
						"height": "59px"
					});
					var inputBox_2 = new cpr.controls.InputBox("mem_pw");
					inputBox_2.secret = true;
					inputBox_2.placeholder = "Password";
					inputBox_2.style.css({
						"border-radius" : "15px",
						"padding-left" : "10px",
						"text-align" : "left"
					});
					inputBox_2.bind("value").toDataMap(app.lookup("dm_memberInfo"), "mem_pw");
					if(typeof onMem_pwKeyup == "function") {
						inputBox_2.addEventListener("keyup", onMem_pwKeyup);
					}
					container.addChild(inputBox_2, {
						"top": "244px",
						"left": "93px",
						"width": "472px",
						"height": "59px"
					});
					var button_1 = new cpr.controls.Button("login");
					button_1.value = "Login";
					button_1.style.css({
						"background-color" : "#5497da",
						"border-radius" : "15px",
						"font-size" : "25px"
					});
					if(typeof onButtonClick == "function") {
						button_1.addEventListener("click", onButtonClick);
					}
					if(typeof onButtonKeydown == "function") {
						button_1.addEventListener("keydown", onButtonKeydown);
					}
					container.addChild(button_1, {
						"top": "347px",
						"left": "242px",
						"width": "174px",
						"height": "40px"
					});
					var output_1 = new cpr.controls.Output();
					output_1.value = "기술 연구소 업무관리 서비스";
					output_1.style.css({
						"color" : "#ffffff",
						"font-weight" : "bold",
						"font-size" : "25px",
						"font-style" : "normal"
					});
					container.addChild(output_1, {
						"top": "58px",
						"left": "148px",
						"width": "361px",
						"height": "71px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "91px",
					"left": "64px",
					"width": "655px",
					"height": "454px"
				});
				var output_2 = new cpr.controls.Output();
				output_2.style.css({
					"background-repeat" : "no-repeat",
					"background-size" : "cover",
					"background-image" : "url('images/UNIONCOMMUNITY-logo-_Eng_.gif')",
					"background-position" : "center"
				});
				container.addChild(output_2, {
					"top": "0px",
					"left": "0px",
					"width": "353px",
					"height": "92px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "59px",
				"width": "719px",
				"height": "545px",
				"left": "calc(50% - 359px)"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "bm_login";
	cpr.core.Platform.INSTANCE.register(app);
})();
