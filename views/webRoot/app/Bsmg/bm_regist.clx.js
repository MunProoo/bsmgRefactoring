/*
 * App URI: app/Bsmg/bm_regist
 * Source Location: app/Bsmg/bm_regist.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/Bsmg/bm_regist", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * bm_regist.js
			 * Created at 2022. 5. 12. 오전 11:16:49.
			 *
			 * @author SW2Team
			 ************************************************/
			var idCheck = false;
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				app.lookup("sms_setRankPart").send();
				
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_overlapCheckSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_overlapCheck = e.control;
				
				if(app.lookup("Result").getString("ResultCode") == 0){
					alert("사용 가능한 아이디입니다.");
					idCheck = true;
					app.lookup("mem_pw").focus();
					return;
				}
				else{
					alert("사용할 수 없는 아이디입니다.");
					app.lookup("mem_id").focus();
					return;
				}
				
			}
			
			
			
			/*
			 * 직급, 부서 정보 받아오기
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_getRankPartSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_getRankPart = e.control;
				if(app.lookup("Result").getString("ResultCode") == 0){
					//console.log(app.lookup("ds_rank").getRowCount())
					app.lookup("mem_rank").redraw();
					app.lookup("mem_part").redraw();
				} else{
					alert("직급, 부서 데이터를 가져오는 중 오류가 생겼습니다.");
				}
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_registUserSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_registUser = e.control;
				var result = app.lookup("Result").getString("ResultCode");
				if (result == 0) {
					alert("사용자를 등록하였습니다.");
					app.close();
				} else {
					alert("사용자 등록에 실패하였습니다.");
					return;
				}
				
			}
			
			
			
			
			
			/*
			 * "사용자 등록" 버튼(regist)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onRegistClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var regist = e.control;
				var id = app.lookup("mem_id");
				var pw = app.lookup("mem_pw");
				var name = app.lookup("mem_name");
				var rank = app.lookup("mem_rank");
				var part = app.lookup("mem_part");
				
				//console.log(id, pw, name, rank, part);
				if(idCheck == false){
					alert("아이디 중복 검사를 해야합니다.");
				} 
				else if(pw.value.trim().length < 1){
					alert("비밀번호를 입력해야 합니다."); 
					pw.focus();	
				} 
				else if(name.value.trim().length < 1) {
					alert("이름을 입력해야 합니다.");
					name.focus();	
				} 
				else if(rank.value == "") {
					alert("직급을 선택해야 합니다.");	
				}
				else if(part.value == "") {
					alert("부서를 선택해야 합니다.");	
				}
				else{
					var memInfo = app.lookup("dm_memberInfo");
					memInfo.setValue("mem_rank", rank.value);
					memInfo.setValue("mem_part", part.value);
					//console.log(rank.value);
					//console.log(app.lookup("dm_memberInfo").getValue("mem_rank"))
					app.lookup("sms_registUser").send();
			//		console.log(app.lookup("sms_registUser").method);
				}
			}
			
			
			/*
			 * "중복 검사" 버튼(overlapCh)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onOverlapChClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var overlapCh = e.control;
				var id = app.lookup("mem_id").value;
				
				if(id.trim().length < 1){
					alert("아이디를 입력하세요.(※공백만으로 아이디를 지정할 순 없습니다.)");
					return;
				}
				else{
					app.lookup("sms_idCheck").send();
					return;
				}
			}
			
			
			/*
			 * 인풋 박스에서 input 이벤트 발생 시 호출.
			 * 입력상자에 보여주는 텍스트가 키보드로부터 입력되어 변경되었을때 발생하는 이벤트.
			 */
			function onMem_idInput(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var mem_id = e.control;
				idCheck = false;
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds_rank");
			dataSet_1.parseData({
				"columns" : [
					{"name": "rank_name"},
					{
						"name": "rank_idx",
						"dataType": "number"
					}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("ds_part");
			dataSet_2.parseData({
				"columns" : [
					{"name": "part_name"},
					{
						"name": "part_idx",
						"dataType": "number"
					}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dm_memberInfo");
			dataMap_1.parseData({
				"columns" : [
					{"name": "mem_id"},
					{"name": "mem_pw"},
					{"name": "mem_name"},
					{
						"name": "mem_rank",
						"dataType": "number"
					},
					{
						"name": "mem_part",
						"dataType": "number"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("Result");
			dataMap_2.parseData({
				"columns" : [{"name": "ResultCode"}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("sms_idCheck");
			submission_1.method = "get";
			submission_1.action = "/bsmg/user/idCheck";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataMap_2, false);
			if(typeof onSms_overlapCheckSubmitDone == "function") {
				submission_1.addEventListener("submit-done", onSms_overlapCheckSubmitDone);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms_setRankPart");
			submission_2.method = "get";
			submission_2.action = "/bsmg/setting/rankPart";
			submission_2.addResponseData(dataSet_1, false);
			submission_2.addResponseData(dataSet_2, false);
			submission_2.addResponseData(dataMap_2, false);
			if(typeof onSms_getRankPartSubmitDone == "function") {
				submission_2.addEventListener("submit-done", onSms_getRankPartSubmitDone);
			}
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("sms_registUser");
			submission_3.action = "/bsmg/user/";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataMap_2, false);
			if(typeof onSms_registUserSubmitDone == "function") {
				submission_3.addEventListener("submit-done", onSms_registUserSubmitDone);
			}
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"background-color" : "#ddecd9",
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "비밀번호 : ";
				container.addChild(output_1, {
					"top": "86px",
					"left": "0px",
					"width": "80px",
					"height": "43px"
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "이름 : ";
				container.addChild(output_2, {
					"top": "169px",
					"left": "0px",
					"width": "80px",
					"height": "43px"
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "아이디 : ";
				container.addChild(output_3, {
					"top": "3px",
					"left": "0px",
					"width": "80px",
					"height": "43px"
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "직급 : ";
				container.addChild(output_4, {
					"top": "238px",
					"left": "0px",
					"width": "56px",
					"height": "43px"
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "부서 : ";
				container.addChild(output_5, {
					"top": "317px",
					"left": "0px",
					"width": "56px",
					"height": "43px"
				});
				var inputBox_1 = new cpr.controls.InputBox("mem_id");
				inputBox_1.placeholder = "아이디";
				inputBox_1.bind("value").toDataMap(app.lookup("dm_memberInfo"), "mem_id");
				if(typeof onMem_idInput == "function") {
					inputBox_1.addEventListener("input", onMem_idInput);
				}
				container.addChild(inputBox_1, {
					"top": "0px",
					"left": "92px",
					"width": "390px",
					"height": "52px"
				});
				var button_1 = new cpr.controls.Button("overlapCh");
				button_1.value = "중복 검사";
				if(typeof onOverlapChClick == "function") {
					button_1.addEventListener("click", onOverlapChClick);
				}
				container.addChild(button_1, {
					"top": "2px",
					"left": "492px",
					"width": "131px",
					"height": "46px"
				});
				var inputBox_2 = new cpr.controls.InputBox("mem_pw");
				inputBox_2.secret = true;
				inputBox_2.placeholder = "비밀번호";
				inputBox_2.bind("value").toDataMap(app.lookup("dm_memberInfo"), "mem_pw");
				container.addChild(inputBox_2, {
					"top": "82px",
					"left": "92px",
					"width": "390px",
					"height": "52px"
				});
				var inputBox_3 = new cpr.controls.InputBox("mem_name");
				inputBox_3.placeholder = "이름";
				inputBox_3.bind("value").toDataMap(app.lookup("dm_memberInfo"), "mem_name");
				container.addChild(inputBox_3, {
					"top": "160px",
					"left": "92px",
					"width": "390px",
					"height": "52px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("mem_rank");
				comboBox_1.placeholder = "직급";
				comboBox_1.preventInput = true;
				comboBox_1.bind("value").toDataMap(app.lookup("dm_memberInfo"), "mem_rank");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("ds_rank"), {
						"label": "rank_name",
						"value": "rank_idx"
					})
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "238px",
					"left": "92px",
					"width": "220px",
					"height": "43px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("mem_part");
				comboBox_2.placeholder = "부서";
				comboBox_2.preventInput = true;
				comboBox_2.bind("value").toDataMap(app.lookup("dm_memberInfo"), "mem_part");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("ds_part"), {
						"label": "part_name",
						"value": "part_idx"
					})
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "317px",
					"left": "92px",
					"width": "220px",
					"height": "43px"
				});
				var button_2 = new cpr.controls.Button("regist");
				button_2.value = "사용자 등록";
				if(typeof onRegistClick == "function") {
					button_2.addEventListener("click", onRegistClick);
				}
				container.addChild(button_2, {
					"top": "417px",
					"left": "92px",
					"width": "131px",
					"height": "46px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "10px",
				"left": "10px",
				"width": "639px",
				"height": "467px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "bm_regist";
	cpr.core.Platform.INSTANCE.register(app);
})();
