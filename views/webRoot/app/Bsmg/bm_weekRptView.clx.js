/*
 * App URI: app/Bsmg/bm_weekRptView
 * Source Location: app/Bsmg/bm_weekRptView.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/Bsmg/bm_weekRptView", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			/************************************************
			 * bm_weekRptView.js
			 * Created at 2022. 6. 7. 오후 4:28:47.
			 *
			 * @author SW2Team
			 ************************************************/
			
			
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				app.lookup("sms_chkLogin").send();
			}
			
			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(/* cpr.events.CEvent */ e){
				var initValue = app.getHost().initValue;
				var wRpt_idx = initValue.wRpt_idx;
				app.lookup("dm_wRptIdx").setValue("wRpt_idx", Number(wRpt_idx));
				app.lookup("sms_getWeekRptInfo").send();
				app.lookup("sms_setPart").send();
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_getWeekRptInfoSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_getWeekRptInfo = e.control;
				var result = app.lookup("Result").getString("ResultCode");
				var src = app.lookup("dm_weekRptInfoSrc");
				var dmWeekRptInfo = app.lookup("dm_weekRptInfo");
				
				if(result == 0){
					dmWeekRptInfo.copyToDataMap(src);
					dateFormat();
				}
			}
			
			function dateFormat(){
				var dmWeekRptInfo = app.lookup("dm_weekRptInfo");
				var wRpt_date = app.lookup("wRpt_date");
				var date = dmWeekRptInfo.getString("wRpt_date").substring(0,8);
				date = date.substring(0,4)+ "-"+date.substring(4,6)+"-"+date.substring(6);
				wRpt_date.value = date;
			}
			
			function setPart(){
				var cmb1 = app.lookup("cmb1");
				var src = app.lookup("dm_weekRptInfoSrc");
				cmb1.selectItemByValue(src.getString("wRpt_part"));
			}
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_setPartSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_setPart = e.control;
				var result = app.lookup("Result").getString("ResultCode");
				if(result == 0){
					setPart();
				} else{
					alert("속성 갱신 실패");
					return;
				}
			}
			
			
			/*
			 * "닫기" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				app.close();
			}
			
			
			/*
			 * "수정" 버튼(update)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onUpdateClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var update = e.control;
				var group = app.lookup("gr1");
				if(group.readOnly){
					group.readOnly = false;
					update.style.css("background-color", "#045729");
					update.value = "완료";
					return;
				} else {
					group.readOnly = true;
					update.style.css("background-color", "#52c183");
					update.value = "수정";
					
					var title = app.lookup("wRpt_title").value;
					var content = app.lookup("wRpt_content").value;
					var part = app.lookup("cmb1").value;
					
					console.log(part);
					if(title == ""){
						alert("제목을 입력하세요.");
						return;
					} else if(content == "") {
						alert("업무 내용을 입력하세요");
						return;
					} else if(part == null){
						alert("보고할 부서를 선택하세요");
						return;
					} 
					
					var dmWeekRpt = app.lookup("dm_weekRptInfo");
					dmWeekRpt.setValue("wRpt_part", part);
					var dmWeekRptSrc = app.lookup("dm_weekRptInfoSrc");
					app.lookup("sms_putWeekRpt").send();
					
					// 수정한 값을 Src에도 저장
					dmWeekRpt.copyToDataMap(dmWeekRptSrc);
					app.getContainer().redraw();
				}
			}
			
			
			
			/*
			 * "취소" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
			//	var group = app.lookup("gr1");
				setPart();
				setWeekRpt();
			}
			
			function setWeekRpt(){
				var src = app.lookup("dm_weekRptInfoSrc");
				var dmWeekRptInfo = app.lookup("dm_weekRptInfo");
				dmWeekRptInfo.clear();
				src.copyToDataMap(dmWeekRptInfo);
				dateFormat();
				app.getContainer().redraw();
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_putWeekRptSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_putWeekRpt = e.control;
				var result = app.lookup("Result").getString("ResultCode");
				if(result == 0){
					alert('주간 업무보고가 수정되었습니다.');
					return;
				}
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_getToRptSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_getToRpt = e.control;
				var result = app.lookup("Result").getString("ResultCode");
				if(result == 0){
					var teamLeader = app.lookup("dm_part").getString("team_leader");
					app.lookup("teamLeader").value = teamLeader;
					console.log('teamLeader : ',teamLeader);
				}
			}
			
			
			/*
			 * 콤보 박스에서 item-click 이벤트 발생 시 호출.
			 * 아이템 클릭시 발생하는 이벤트.
			 */
			function onCmb1ItemClick(/* cpr.events.CItemEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cmb1 = e.control;
				var combo = cmb1.value;
				app.lookup("dm_part").setValue("part_idx", combo);
				app.lookup("sms_getToRpt").send();
			}
			
			
			/*
			 * "삭제" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				var wRpt_idx = app.lookup("dm_wRptIdx").getString("wRpt_idx");
				if(confirm('정말 삭제하시겠습니까?')){
					app.lookup("sms_deleteWeekRpt").action = "/bsmg/report/deleteWeekRpt/"+wRpt_idx;
					app.lookup("sms_deleteWeekRpt").send();
				} else {
					return;
				}
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_deleteWeekRptSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				var sms_deleteWeekRpt = e.control;
				var result = app.lookup("Result").getString("ResultCode");
				if(result == 0){
					alert("정상적으로 삭제되었습니다.");
					app.close(1);
				}
			}
			
			
			/*
			 * 서브미션에서 submit-done 이벤트 발생 시 호출.
			 * 응답처리가 모두 종료되면 발생합니다.
			 */
			function onSms_chkLoginSubmitDone(/* cpr.events.CSubmissionEvent */ e){
				/** 
				 * @type cpr.protocols.Submission
				 */
				
				var sms_chkLogin = e.control;
				var result = app.lookup("Result").getString("ResultCode");
				
				if(result == 0){
					var mem_rank = app.lookup("dm_memberInfo").getString("mem_rank")
					var mem_name = app.lookup("dm_memberInfo").getString("mem_name");	
					var wRpt_reporter = app.lookup("dm_weekRptInfo").getString("wRpt_reporter");
					var wRpt_toRpt = app.lookup("dm_weekRptInfo").getString("wRpt_toRpt");
					if(mem_name == wRpt_reporter){
						app.lookup("update").visible = true;
						app.lookup("cancel").visible = true;
						app.lookup("delete").visible = true;
					} else if(mem_name == wRpt_toRpt || (mem_rank == '관리자' || mem_rank == '연구소장' || mem_rank == '부소장' )){
						
					}
					app.getContainer().redraw();
				} else {
					alert("세션이 끊어졌습니다.");
					app.close();
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("ds_part");
			dataSet_1.parseData({
				"columns" : [
					{"name": "part_name"},
					{"name": "part_idx"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dm_weekRptInfo");
			dataMap_1.parseData({
				"columns" : [
					{"name": "wRpt_idx"},
					{"name": "wRpt_reporter"},
					{"name": "wRpt_date"},
					{"name": "wRpt_toRpt"},
					{"name": "wRpt_title"},
					{"name": "wRpt_content"},
					{"name": "wRpt_part"},
					{"name": "wRpt_omissionDate"}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dm_wRptIdx");
			dataMap_2.parseData({
				"columns" : [{"name": "wRpt_idx"}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dm_weekRptInfoSrc");
			dataMap_3.parseData({
				"columns" : [
					{"name": "wRpt_idx"},
					{"name": "wRpt_reporter"},
					{"name": "wRpt_date"},
					{"name": "wRpt_toRpt"},
					{"name": "wRpt_title"},
					{"name": "wRpt_content"},
					{"name": "wRpt_part"},
					{"name": "wRpt_omissionDate"}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("Result");
			dataMap_4.parseData({
				"columns" : [{"name": "ResultCode"}]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dm_part");
			dataMap_5.parseData({
				"columns" : [
					{"name": "part_idx"},
					{"name": "team_leader"}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dm_memberInfo");
			dataMap_6.parseData({
				"columns" : [
					{"name": "mem_id"},
					{"name": "mem_pw"},
					{"name": "mem_name"},
					{"name": "mem_rank"},
					{"name": "mem_part"}
				]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("sms_getWeekRptInfo");
			submission_1.async = false;
			submission_1.method = "get";
			submission_1.action = "/bsmg/report/getWeekRptInfo";
			submission_1.addRequestData(dataMap_2);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataMap_4, false);
			if(typeof onSms_getWeekRptInfoSubmitDone == "function") {
				submission_1.addEventListener("submit-done", onSms_getWeekRptInfoSubmitDone);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("sms_putWeekRpt");
			submission_2.async = false;
			submission_2.method = "put";
			submission_2.action = "/bsmg/report/putWeekRpt";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_4, false);
			if(typeof onSms_putWeekRptSubmitDone == "function") {
				submission_2.addEventListener("submit-done", onSms_putWeekRptSubmitDone);
			}
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("sms_setPart");
			submission_3.async = false;
			submission_3.method = "get";
			submission_3.action = "/bsmg/setting/rankPart";
			submission_3.addResponseData(dataSet_1, false);
			if(typeof onSms_setPartSubmitDone == "function") {
				submission_3.addEventListener("submit-done", onSms_setPartSubmitDone);
			}
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("sms_getToRpt");
			submission_4.async = false;
			submission_4.method = "get";
			submission_4.action = "/bsmg/setting/getToRpt";
			submission_4.addRequestData(dataMap_5);
			submission_4.addResponseData(dataMap_5, false);
			submission_4.addResponseData(dataMap_4, false);
			if(typeof onSms_getToRptSubmitDone == "function") {
				submission_4.addEventListener("submit-done", onSms_getToRptSubmitDone);
			}
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("sms_deleteWeekRpt");
			submission_5.method = "delete";
			submission_5.action = "/bsmg/report/deleteWeekRpt";
			submission_5.addRequestData(dataMap_2);
			submission_5.addResponseData(dataMap_4, false);
			if(typeof onSms_deleteWeekRptSubmitDone == "function") {
				submission_5.addEventListener("submit-done", onSms_deleteWeekRptSubmitDone);
			}
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("sms_chkLogin");
			submission_6.method = "get";
			submission_6.action = "/bsmg/login/chkLogin";
			submission_6.addResponseData(dataMap_4, false);
			submission_6.addResponseData(dataMap_6, false);
			if(typeof onSms_chkLoginSubmitDone == "function") {
				submission_6.addEventListener("submit-done", onSms_chkLoginSubmitDone);
			}
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("update");
			button_1.visible = false;
			button_1.value = "수정";
			button_1.style.css({
				"background-color" : "#52c183",
				"color" : "#ffffff",
				"background-image" : "none"
			});
			if(typeof onUpdateClick == "function") {
				button_1.addEventListener("click", onUpdateClick);
			}
			container.addChild(button_1, {
				"top": "593px",
				"left": "48px",
				"width": "149px",
				"height": "43px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "닫기";
			if(typeof onButtonClick == "function") {
				button_2.addEventListener("click", onButtonClick);
			}
			container.addChild(button_2, {
				"top": "593px",
				"left": "648px",
				"width": "149px",
				"height": "43px"
			});
			
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["cl-form-group"]);
			// Layout
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "0px";
			formLayout_1.rightMargin = "0px";
			formLayout_1.bottomMargin = "0px";
			formLayout_1.leftMargin = "0px";
			formLayout_1.horizontalSpacing = "0px";
			formLayout_1.verticalSpacing = "0px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["100px", "1fr", "100px", "1fr"]);
			formLayout_1.setUseColumnShade(0, true);
			formLayout_1.setUseColumnShade(2, true);
			formLayout_1.setRows(["1fr", "1fr"]);
			formLayout_1.setRowMinHeight(0, 10);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "구분";
				output_1.style.css({
					"font-weight" : "bolder",
					"text-align" : "center"
				});
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "보고일자";
				output_2.style.css({
					"font-weight" : "bolder",
					"text-align" : "center"
				});
				container.addChild(output_2, {
					"colIndex": 2,
					"rowIndex": 0
				});
				var output_3 = new cpr.controls.Output();
				output_3.readOnly = true;
				output_3.value = "주간 업무보고";
				output_3.style.css({
					"padding-left" : "3px",
					"text-align" : "left"
				});
				container.addChild(output_3, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var group_2 = new cpr.controls.Container();
				group_2.style.setClasses(["cl-form-group"]);
				// Layout
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "0px";
				formLayout_2.rightMargin = "0px";
				formLayout_2.bottomMargin = "0px";
				formLayout_2.leftMargin = "0px";
				formLayout_2.horizontalSpacing = "0px";
				formLayout_2.verticalSpacing = "0px";
				formLayout_2.horizontalSeparatorWidth = 1;
				formLayout_2.verticalSeparatorWidth = 1;
				formLayout_2.setColumns(["100px", "1fr", "100px", "1fr"]);
				formLayout_2.setUseColumnShade(0, true);
				formLayout_2.setUseColumnShade(2, true);
				formLayout_2.setRows(["1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var output_4 = new cpr.controls.Output();
					output_4.value = "보고대상";
					output_4.style.css({
						"font-weight" : "bold",
						"text-align" : "center"
					});
					container.addChild(output_4, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var output_5 = new cpr.controls.Output("teamLeader");
					output_5.readOnly = true;
					output_5.style.css({
						"background-color" : "#e4eff8",
						"padding-left" : "3px",
						"text-align" : "left"
					});
					output_5.bind("value").toDataMap(app.lookup("dm_weekRptInfo"), "wRpt_toRpt");
					container.addChild(output_5, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var output_6 = new cpr.controls.Output();
					output_6.value = "보고자";
					output_6.style.css({
						"font-weight" : "bold",
						"text-align" : "center"
					});
					container.addChild(output_6, {
						"colIndex": 2,
						"rowIndex": 0
					});
					var output_7 = new cpr.controls.Output("toRpt");
					output_7.readOnly = true;
					output_7.style.css({
						"background-color" : "#f8e4e4",
						"padding-left" : "3px",
						"text-align" : "left"
					});
					output_7.bind("value").toDataMap(app.lookup("dm_weekRptInfo"), "wRpt_reporter");
					container.addChild(output_7, {
						"colIndex": 3,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 0,
					"rowIndex": 1,
					"colSpan": 4,
					"rowSpan": 1
				});
				var output_8 = new cpr.controls.Output("wRpt_date");
				output_8.readOnly = true;
				output_8.style.css({
					"padding-left" : "3px"
				});
				container.addChild(output_8, {
					"colIndex": 3,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "10px",
				"left": "10px",
				"width": "820px",
				"height": "80px"
			});
			
			var button_3 = new cpr.controls.Button("cancel");
			button_3.visible = false;
			button_3.value = "취소";
			button_3.style.css({
				"background-color" : "#63abf3",
				"color" : "#ffffff",
				"background-image" : "none"
			});
			if(typeof onButtonClick2 == "function") {
				button_3.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_3, {
				"top": "593px",
				"left": "248px",
				"width": "149px",
				"height": "43px"
			});
			
			var button_4 = new cpr.controls.Button("delete");
			button_4.visible = false;
			button_4.value = "삭제";
			button_4.style.css({
				"background-color" : "#de004b",
				"color" : "#fff7f7",
				"background-image" : "none"
			});
			if(typeof onButtonClick3 == "function") {
				button_4.addEventListener("click", onButtonClick3);
			}
			container.addChild(button_4, {
				"top": "593px",
				"left": "448px",
				"width": "149px",
				"height": "43px"
			});
			
			var group_3 = new cpr.controls.Container("gr1");
			group_3.readOnly = true;
			group_3.style.setClasses(["cl-form-group"]);
			// Layout
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.topMargin = "0px";
			formLayout_3.rightMargin = "0px";
			formLayout_3.bottomMargin = "0px";
			formLayout_3.leftMargin = "0px";
			formLayout_3.horizontalSpacing = "0px";
			formLayout_3.verticalSpacing = "0px";
			formLayout_3.horizontalSeparatorWidth = 1;
			formLayout_3.verticalSeparatorWidth = 1;
			formLayout_3.setColumns(["100px", "1fr"]);
			formLayout_3.setUseColumnShade(0, true);
			formLayout_3.setRows(["35px", "35px", "1fr", "40px"]);
			group_3.setLayout(formLayout_3);
			(function(container){
				var output_9 = new cpr.controls.Output();
				output_9.value = "부서";
				output_9.style.css({
					"font-weight" : "bolder",
					"text-align" : "center"
				});
				container.addChild(output_9, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_10 = new cpr.controls.Output();
				output_10.value = "주간업무제목";
				output_10.style.css({
					"font-weight" : "bolder",
					"text-align" : "center"
				});
				container.addChild(output_10, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var inputBox_1 = new cpr.controls.InputBox("wRpt_title");
				inputBox_1.placeholder = "주간 업무보고 제목을 입력하세요.";
				inputBox_1.style.css({
					"padding-left" : "3px"
				});
				inputBox_1.bind("value").toDataMap(app.lookup("dm_weekRptInfo"), "wRpt_title");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var output_11 = new cpr.controls.Output();
				output_11.value = "주간업무 내용";
				output_11.style.css({
					"font-weight" : "bolder",
					"text-align" : "center"
				});
				container.addChild(output_11, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var textArea_1 = new cpr.controls.TextArea("wRpt_content");
				textArea_1.placeholder = "주간업무 내용을 입력하세요.";
				textArea_1.style.css({
					"padding-left" : "3px"
				});
				textArea_1.bind("value").toDataMap(app.lookup("dm_weekRptInfo"), "wRpt_content");
				container.addChild(textArea_1, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var output_12 = new cpr.controls.Output();
				output_12.value = "보고가 없는 날짜";
				output_12.style.css({
					"font-weight" : "bolder",
					"text-align" : "center"
				});
				container.addChild(output_12, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var inputBox_2 = new cpr.controls.InputBox("wRpt_omissionDate");
				inputBox_2.style.css({
					"padding-left" : "3px"
				});
				inputBox_2.bind("value").toDataMap(app.lookup("dm_weekRptInfo"), "wRpt_omissionDate");
				container.addChild(inputBox_2, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var comboBox_1 = new cpr.controls.ComboBox("cmb1");
				comboBox_1.preventInput = true;
				comboBox_1.style.css({
					"background-color" : "none",
					"padding-left" : "3px"
				});
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("ds_part"), {
						"label": "part_name",
						"value": "part_idx"
					})
				})(comboBox_1);
				if(typeof onCmb1ItemClick == "function") {
					comboBox_1.addEventListener("item-click", onCmb1ItemClick);
				}
				container.addChild(comboBox_1, {
					"colIndex": 1,
					"rowIndex": 0,
					"colSpan": 1,
					"rowSpan": 1
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "89px",
				"left": "10px",
				"width": "820px",
				"height": "494px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "bm_weekRptView";
	cpr.core.Platform.INSTANCE.register(app);
})();
